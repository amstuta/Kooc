#!/usr/bin/env python

import os
import cnorm
from misc import *
from kooc_class import *


def create_header():
    a = Kooc()
    res = a.parse_file(filePath + '/kooc.kh')
    res.body.insert(0, cnorm.nodes.Raw('#ifndef KOOC_H\n#define KOOC_H\n'))
    moduleTransfo(res)
    res.body.append(DeclKeeper.instance().obj_vtable)
    res.body.append(cnorm.nodes.Raw('#endif\n'))
    res.body.insert(3, DeclKeeper.instance().typedef_vt_object)
    DeclKeeper.instance().clean_implementations()
    outFile = execPath + '/kooc.h'
    write_file_out(outFile, res)


def main():
    inFile, outFile = check_argv()
    create_header()
    a = Kooc()
    res = a.parse_file(inFile)
    add_include(res)
    if 'Object' in DeclKeeper.instance().modules:
        del DeclKeeper.instance().modules['Object']
    moduleTransfo(res)
    if outFile.endswith('.h'):
        add_defines(res, outFile)

    #for i in res.body:
    #    if hasattr(i, '_name') and 'izi' in i._name:
    #        print(i)

    write_file_out(outFile, res)
    return 0
    
    
if __name__ == '__main__':
    main()
